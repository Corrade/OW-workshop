
#### MOVE TO COMMENTS IN TEXT FORMAT
#### v1.1.0
- Changed all `compare x = false` to `not x`, and `compare x = true` to `x`.
- Handled cases where smart respawn or refresh would be called when an existing instance of the module was already running. Simply fixed by settings waits to restart when true.



- Vastly improved the randomisation.

Before:
Spawns were in roughly one of the four cardinal directions. Their validity was therefore consistently good or consistently bad, leading to unpredictable selection times.

After:
Spawns are based on scaling a random distance by a random number. They are very random and the selection time has been decreased significantly overall. Deleted GV'B.



- Removed code that waited for the TP module to finish before setting E = 0.

Before:
When a player died, the victim would smart respawn, then the attacker would refresh. The order was sequential so that the victim's smart respawn didn't reference the attacker's position during their refresh, in which they might be at a temporary respawn position. This approach caused large delays when coupled with the slowness of the smart respawn randomisation.

After:
The position of the attacker is stored in `PV'H`, allowing smart respawn to immediately run refresh.



- Refresh takes a more current position (rearranging).



- Problem: respawning takes a while and teleportation must wait until it occurs. Solution:
    - Cancel all motion and temporarily set gravity to zero.
        - To allow the next check to work for the second exception case involving refresh.
    - Check that the TP will work => respawn has gone off => player's pos != TP position.
        - Doesn't work when the player's pos was originally not at the TP position; during most situations of smart respawn OR during cases of refresh where the player is moving from their pos exceptionally fast.
    - Check that the TP has worked => player's pos == TP position.
        - Doesn't work when the player's pos was originally at the TP position; during most situations of refresh.

Note: for TP module, if the TP position is very close to the player, the motion cancel in TP module must occur in the same tick as the tp position is assigned. This is so the code doesn't count the player moving out of the tp position as the respawn occuring.

- Also added a check for set facing.
- Changed empty arguments to 999 since the impulse speed from refresh could be 0 == Null, which would incorrectly be interpreted as an empty argument.
- Fixed impulse by taking more appropriate arguments - velocity instead of speed. (nullfied the above issue)